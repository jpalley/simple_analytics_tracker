# Deploy to these servers.
servers:
  web:
    - 209.38.6.16
  job:
    hosts:
      - 209.38.6.16
    cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# Set ssl: false if using something like Cloudflare to terminate SSL (but keep host!).
proxy:
  hosts:
    - analytics.clever-builds.com
    - analytics.clevertinyhomes.com

env:
  clear:
    GOOGLE_CLOUD_PROJECT: clever-builds-production
    BIGQUERY_DATASET: cdp
    SENDGRID_DOMAIN: clevertinyhomes.com
    ERROR_NOTIFICATION_EMAIL: jonathan@clevertinyhomes.com
    SENDGRID_FROM_EMAIL: hello@clevertinyhomes.com
    FACEBOOK_PIXEL_ID: 651217262831156
    DB_HOST: simple-analytics-database
  secret:
    - SECRET_KEY_BASE
    - POSTGRES_PASSWORD
    - RAILS_MASTER_KEY
    - GOOGLE_CLOUD_CREDENTIALS
    - HUBSPOT_ACCESS_TOKEN
    - SENDGRID_API_KEY
    - FACEBOOK_TOKEN


    # Set number of processes dedicated to Solid Queue (default: 1)
    # JOB_CONCURRENCY: 3

    # Set number of cores available to the application on each server (default: 1).
    # WEB_CONCURRENCY: 2

    # Match this to any external database server to configure Active Record correctly
    # DB_HOST: 192.168.0.2

    # Log everything from Rails
    # RAILS_LOG_LEVEL: debug
# Make the directory on the server before running kamal deploy.  Set the permissions to user 1000
volumes:
  - /mnt/volume_sfo3_01/simple_analytics:/rails/storage


  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: 3.2.3
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: app

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  database:
    service: simple-analytics-database
    image: postgres:16.9
    host: 209.38.6.16
    port: "127.0.0.1:5432:5432"
    env:
      clear:
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_DB: simple_analytics_production
      secret:
        - POSTGRES_PASSWORD
    files:
      - config/postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    directories:
      - /mnt/volume_sfo3_01/simple_analytics_postgres:/var/lib/postgresql/data
  # https://mileswoodroffe.com/articles/kamal-database-backups
  db_backup:
    service: simple-analytics-db-backup
    image: eeshugerman/postgres-backup-s3:16
    host: 209.38.6.16
    env:
      clear:
        SCHEDULE: "@daily"
        BACKUP_KEEP_DAYS: 90
        S3_REGION: auto
        S3_BUCKET: postgres-backup
        S3_PREFIX: simple_analytics_production
        S3_ENDPOINT: https://e2f7bebd765a1c87b31e836b08f0713d.r2.cloudflarestorage.com
        POSTGRES_HOST: simple-analytics-database
        POSTGRES_DATABASE: simple_analytics_production
        POSTGRES_USER: postgres
        S3_ACCESS_KEY_ID: a1ade455c837ce5f1cbdd441b0d0fb65
      secret:
        - POSTGRES_PASSWORD
        - S3_SECRET_ACCESS_KEY:CF_POSTGRES_BACKUP_SECRET_ACCESS_KEY
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
